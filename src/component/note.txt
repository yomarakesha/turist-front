import { useTranslation } from "react-i18next";
import Navbar from "./NavBar";
import { useHotels } from "../hooks/hotels";
import bgImage from "./../assets/bg1.jpg";
import bgImage1 from "./../assets/hotel.svg";

export default function HotelWithNavbar() {
  const { t } = useTranslation();
  const {
    menuOpen,
    toggleMenu,
    language,
    changeLanguage,
    query,
    setQuery,
    displayedHotels,
    loading,
    cities,
    cityFilter,
    setCityFilter,
    priceSort,
    setPriceSort,
    ratingSort,
    setRatingSort,
  } = useHotels();

  return (
    <div
      className="min-h-screen font-sans"
      style={{
        backgroundImage: `url(${bgImage})`,
        backgroundSize: "cover",
        backgroundPosition: "center",
      }}
    >
      {/* ✅ Navbar вынесен */}
      <Navbar
        menuOpen={menuOpen}
        toggleMenu={toggleMenu}
        language={language}
        changeLanguage={changeLanguage}
      />

      <div className="container mx-auto p-6">
        {/* ✅ Search & Filters */}
        <div className="bg-white/80 p-4 rounded-xl shadow-md mb-6 flex flex-col md:flex-row gap-4">
          <input
            type="text"
            value={query}
            onChange={(e) => setQuery(e.target.value)}
            placeholder={t("searchHotels")}
            className="flex-1 border rounded-lg px-3 py-2"
          />

          <select
            value={cityFilter}
            onChange={(e) => setCityFilter(e.target.value)}
            className="border rounded-lg px-3 py-2"
          >
            <option value="">{t("allCities")}</option>
            {cities.map((city) => (
              <option key={city.id} value={city.id}>
                {city[`name_${language}`]}
              </option>
            ))}
          </select>

          <select
            value={priceSort}
            onChange={(e) => setPriceSort(e.target.value)}
            className="border rounded-lg px-3 py-2"
          >
            <option value="">{t("sortByPrice")}</option>
            <option value="asc">{t("lowToHigh")}</option>
            <option value="desc">{t("highToLow")}</option>
          </select>

          <select
            value={ratingSort}
            onChange={(e) => setRatingSort(e.target.value)}
            className="border rounded-lg px-3 py-2"
          >
            <option value="">{t("sortByRating")}</option>
            <option value="asc">{t("lowToHigh")}</option>
            <option value="desc">{t("highToLow")}</option>
          </select>
        </div>

        {/* ✅ Hotels Grid */}
        {loading ? (
          <p className="text-center">{t("loading")}</p>
        ) : (
          <div className="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-6">
            {displayedHotels.map((hotel) => (
              <div key={hotel.id} className="bg-white shadow rounded-xl p-4">
                <img
                  src={hotel.image || bgImage1}
                  alt={hotel[`name_${language}`] || hotel.name}
                  className="w-full h-48 object-cover rounded-lg mb-3"
                />
                <h3 className="text-lg font-bold">
                  {hotel[`name_${language}`] || hotel.name}
                </h3>
                <p className="text-gray-600">
                  {hotel.city?.[`name_${language}`]}
                </p>
                <p className="font-semibold">{hotel.price} $</p>
                <p className="text-yellow-500">⭐ {hotel.rating}</p>
              </div>
            ))}
          </div>
        )}
      </div>
    </div>
  );
}
